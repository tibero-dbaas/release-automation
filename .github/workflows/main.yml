name: release-automation

on:
  pull_request:
    types: [closed]
    branches:
      - main
jobs:
  check_pr_branch_type:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v2
      - name: Determine branch type
        id: determine_branch_type
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          branch_prefix=$(echo ${{ env.BRANCH_NAME }} | cut -d '/' -f1)
          
          if [ "$branch_prefix" == "release" ]; then
            echo "INCREMENTAL_TYPE='MAJOR'" >> $GITHUB_ENV
            echo "IS_RELEASE_BRANCH=true" >> $GITHUB_ENV
          elif [ "$branch_prefix" == "feature" ]; then
            echo "INCREMENTAL_TYPE='MINOR'" >> $GITHUB_ENV
          elif [ "$branch_prefix" == "hotfix" ]; then
            echo "INCREMENTAL_TYPE='MINOR'" >> $GITHUB_ENV
          elif [ "$branch_prefix" == "patch" ]; then
            echo "INCREMENTAL_TYPE='PATCH'" >> $GITHUB_ENV
          else 
            if [ "$branch_prefix" == "gh-action" ]; then
              echo "IS_GH_ACTION=true" >> $GITHUB_ENV
            fi
            echo "incremental_type='UNKNOWN'" >> $GITHUB_ENV
          fi

          VALIDATE_PRE=$(echo ${{ env.BRANCH_NAME }} | cut -d'/' -f2)
          if [ "${VALIDATE_PRE}" == "pre" ]; then
            echo "PRERELEASE_NAME=$(echo ${{ env.BRANCH_NAME }} | cut -d '/' -f3)" >> $GITHUB_ENV
          fi

      - name: Generate Release
        if: ${{ env.INCREMENTAL_TYPE }} != 'UNKNOWN'
        uses: ./workflows/generate-release.yml
        with:
          IS_RELEASE_BRANCH: ${{ env.IS_RELEASE_BRANCH }}
          INCREMENTAL_TYPE: ${{ env.INCREMENTAL_TYPE }}
          PRERELEASE_NAME: ${{ env.PRERELEASE_NAME }}

      - name: Error Handling
        if: ${{ env.IS_GH_ACTION }} == false
        run: echo "::error file=main.yml::Wrong Branch Name"

